<?php

namespace Omnipay\Telcell\Message;

use Omnipay\Common\Message\AbstractRequest;
use Symfony\Component\HttpFoundation\Request as HttpRequest;

/**
 * Class PurchaseRequest
 *
 * @package Omnipay\Idram\Message
 */
class PurchaseRequest extends AbstractRequest
{
    /**
     * Sets the shop ID.
     *
     * @param  string  $value
     *
     * @return $this
     */
    public function setShopId($value)
    {
        return $this->setParameter('shop_id', $value);
    }

    /**
     * Get the shop ID.
     *
     * @return mixed
     */
    public function getShoptId()
    {
        return $this->getParameter('shop_id');
    }

    /**
     * Sets the request shop key.
     *
     * @param  string  $value
     *
     * @return $this
     */
    public function setShopKey($value)
    {
        return $this->setParameter('shop_key', $value);
    }

    /**
     * Get the request shop key.
     *
     * @return mixed
     */
    public function getShopKey()
    {
        return $this->getParameter('shop_key');
    }

    /**
     * Sets the request language.
     *
     * @param  string  $value
     *
     * @return $this
     */
    public function setLanguage($value)
    {
        return $this->setParameter('language', $value);
    }

    /**
     * Get the request language.
     *
     * @return $this
     */
    public function getLanguage()
    {
        return $this->getParameter('language');
    }
    
    public function setValidDays($value)
    {
        return $this->setParameter('valid_days', $value ?? 1);
    }

    public function getValidDays()
    {
        return $this->getParameter('valid_days') ?? 1;
    }

    /**
     * Get the transaction ID.
     *
     * The transaction ID is the identifier generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return base64_encode($this->getParameter('transactionId'));
    }
    
    public function getDescription()
    {
        return base64_encode($this->getParameter('description'));
    }

    public function getCurrency()
    {
        return $this->getParameter('currency') ?? '֏';
    }

    public function getAmount()
    {
        return $this->getParameter('amount');
    }

    /**
     * Generate security code for purchase request
     *
     * @param array $fields
     *
     * @return string
     */
    protected function getTelcellSecurityCode($fields)
    {
        $needToBeHashed = $this->getShopKey();
        foreach ($fields as $value) {
            $needToBeHashed .= $value;
        }

        return hash('md5', $needToBeHashed);
    }

    /**
     * Prepare data to send
     *
     * @return array
     */
    public function getData()
    {
        $this->validate('shop_key', 'shop_id', 'amount', 'description', 'transactionId');
        $formFields = [
            'issuer'        => $this->getShoptId(),
            'currency'      => $this->getCurrency(),
            'price'         => $this->getAmount(),
            'product'       => $this->getDescription(),
            'issuer_id'     => $this->getTransactionId(),
            'valid_days'    => $this->getValidDays(),
        ];

        return [
            ...$formFields,
            'action'        => 'PostInvoice',
            'lang'          => $this->getLanguage(),
            'security_code' => $this->getTelcellSecurityCode($formFields),
        ];
    }
    
    /**
     * Send data and return response instance
     *
     * @param  mixed  $data
     *
     * @return \Omnipay\Common\Message\ResponseInterface|\Omnipay\Telcell\Message\PurchaseResponse
     */
    public function sendData($data)
    {
        return $this->response = new PurchaseResponse($this, $data);
    }
}